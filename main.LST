C51 COMPILER V9.53.0.0   MAIN                                                              12/01/2015 23:17:07 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "main.h"
   2          #include "port.h"
   3          #include <stdio.h>
   4          #include "uart.h"
   5          #include "print_bytes.h"
   6          #include "hardware_delay.h"
   7          #include "lcd.h"
   8          #include "spi.h"
   9          #include "SDcard.h"
  10          #include "Long_Serial_In.h"
  11          #include "Directory_Functions.h"
  12          #include "i2c.h"
  13          #include "sta013.h"
  14          
  15          
  16          
  17          
  18            
  19          
  20          extern uint8_t code CONFIG, CONFIG2;
  21          extern uint32_t idata FirstRootDirSec;
  22          
  23          
  24          void main(void)
  25          {
  26   1        uint8_t error_flag, array_name[2];
  27   1        
  28   1        uint16_t number_of_entries;
  29   1        uint8_t xdata block_info[512];
  30   1      
  31   1        LED1=0;
  32   1        UART_Init();
  33   1        LCD_Init();
  34   1        SPI_master_init(400000); // Set clock rate to that speed in Hz
  35   1        error_flag = SDcard_init();
  36   1        printf("%-20s", "Mounting Drive");
  37   1        putchar(10);
  38   1        putchar(13);
  39   1        error_flag = mount_drive(block_info);
  40   1        number_of_entries = Print_Directory(FirstRootDirSec, block_info);
  41   1        LCD_Clear();
  42   1        LCD_Write(COMMAND, LINE1);
  43   1      
  44   1        LCD_Print(9,"init done");
  45   1        LED2=0;
  46   1        if (error_flag != NO_ERRORS)
  47   1        {
  48   2          LED4=0;
  49   2          printf("%-10s", "ERROR1! ");
  50   2          printf("%2.2bX", error_flag);
  51   2          putchar(10);
  52   2          putchar(13);
  53   2        }
  54   1        else
  55   1        { 
C51 COMPILER V9.53.0.0   MAIN                                                              12/01/2015 23:17:07 PAGE 2   

  56   2          printf("%-10s", "No ERROR1! ");
  57   2          putchar(10);
  58   2          putchar(13);
  59   2        }
  60   1        error_flag = config_file();
  61   1        if (error_flag != NO_ERRORS)
  62   1        {
  63   2          LED4=0;
  64   2          printf("%-10s", "ERROR! ");
  65   2          printf("%2.2bX", error_flag);
  66   2          putchar(10);
  67   2          putchar(13);
  68   2        }
  69   1          
  70   1        test_I2C(array_name);
  71   1        LED3=0;
  72   1        while(1);
  73   1        
  74   1      //  while(1)
  75   1      //  {
  76   1      //    current_sector = FirstRootDirSec;
  77   1      //    while(error_flag == NO_ERRORS)
  78   1      //    {
  79   1      //      do
  80   1      //      {
  81   1      //        printf("%-35s", "Enter a Block Number: ");
  82   1      //        block_number = long_serial_input();
  83   1      //        if(block_number > number_of_entries || block_number == 0)
  84   1      //        {
  85   1      //          printf("%-35s", "Number too large.\n\r");
  86   1      //        }
  87   1      //      }while(block_number > number_of_entries || block_number == 0);
  88   1      //      return_entry = Read_Dir_Entry(current_sector, block_number, block_info);
  89   1      //      printf("%-20s", "return_entry");
  90   1      //      printf("%8.8lX", return_entry);
  91   1      //      putchar(10);
  92   1      //      putchar(13);
  93   1      //      next_entry = return_entry & 0x0FFFFFFF;
  94   1      //      if(return_entry & 0x10000000)
  95   1      //      {     
  96   1      //        printf("%-20s", "was a directory");
  97   1      //        putchar(10);
  98   1      //        putchar(13);
  99   1      //        current_sector = first_sector(next_entry);
 100   1      //        printf("%-20s", "current_sector");
 101   1      //        printf("%8.8lX", current_sector);
 102   1      //        putchar(10);
 103   1      //        putchar(13);
 104   1      //        number_of_entries = Print_Directory(current_sector, block_info);
 105   1      //      }
 106   1      //      if((return_entry & 0x10000000) == 0 && block_number !=0)
 107   1      //      {
 108   1      //        printf("%-20s", "was a file");
 109   1      //        Open_File(next_entry, block_info);
 110   1      //        number_of_entries = Print_Directory(current_sector, block_info);
 111   1      //      }
 112   1      //      if(return_entry & 0x80000000)
 113   1      //      {
 114   1      //        error_flag = PRINT_ERROR;
 115   1      //      }
 116   1      //    }
 117   1      //    if(error_flag!= NO_ERRORS)
C51 COMPILER V9.53.0.0   MAIN                                                              12/01/2015 23:17:07 PAGE 3   

 118   1      //    {
 119   1      //      LED4 = 0;
 120   1      //      putchar(10);
 121   1      //      putchar(13);
 122   1      //      printf("%-10s", "ERROR! ");
 123   1      //      printf("%2.2bX", error_flag);
 124   1      //      putchar(10);
 125   1      //      putchar(13);
 126   1      //      while(1);
 127   1      //    }
 128   1      //  }
 129   1      }
 130          
 131              
 132              
 133              
 134              
 135              
 136              
 137              
 138              
 139              
 140              
 141              
 142          //    if(error_flag != NO_ERRORS)
 143          //    {
 144          //      LED4 = 0;
 145          //      LCD_Clear();
 146          //      LCD_Write(COMMAND, LINE1);
 147          //      LCD_Print(1, &error_flag);
 148          //      
 149          //      delay_ms(1000); 
 150          //        printf("%2.2bX ",error_flag);       
 151          //      putchar(10);
 152          //      putchar(13);
 153          //      delay_ms(1000);
 154          //    }
 155          //    else
 156          //    {
 157          //      delay_ms(1000);
 158          //      LCD_Clear();
 159          //      LCD_Write(COMMAND, LINE1);
 160          //      LCD_Print(13, "Enter a Block");
 161          //      LCD_Write(COMMAND, LINE2);
 162          //      LCD_Print(8, "Number: ");
 163          //      //delay_ms(3000);
 164          //      
 165          //      printf("%-35s", "Enter a Block Number");
 166          //      
 167          //      block_number = long_serial_input();   // returns uint32_t 
 168          //      LCD_Clear();
 169          //      
 170          //      error_flag = read_block(block_number, block_info);
 171          //      LCD_Print(13, "Read Success!");
 172          //      print_memory(block_info,512);
 173          //      
 174          //    }
 175          
 176          //    
 177          //    
 178          //    
 179          //    
C51 COMPILER V9.53.0.0   MAIN                                                              12/01/2015 23:17:07 PAGE 4   

 180          ////    LCD_Write(COMMAND, LINE1);
 181          ////    LCD_Print(16, "Coltons and Matt");
 182          ////    LCD_Write(COMMAND, LINE2);
 183          ////    LCD_Print(15, "hews LCD Works!");
 184          ////    delay_ms(3000);
 185          ////    LCD_Clear();
 186          //  }
 187          
 188          //}
 189          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    230    ----
   CONSTANT SIZE    =     73    ----
   XDATA SIZE       =   ----     512
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
