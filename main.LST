C51 COMPILER V9.53.0.0   MAIN                                                              11/06/2015 13:39:06 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "main.h"
   2          #include "port.h"
   3          #include <stdio.h>
   4          #include "uart.h"
   5          #include "print_bytes.h"
   6          #include "hardware_delay.h"
   7          #include "lcd.h"
   8          #include "spi.h"
   9          #include "SDcard.h"
  10          #include "Long_Serial_In.h"
  11          #include "read_sector.h"
  12          #include "Directory_Functions.h"
  13          
  14          
  15          
  16            
  17          
  18          
  19          extern uint32_t idata RootDirSec;
  20          
  21          
  22          void main(void)
  23          {
  24   1        uint8_t error_flag;
  25   1        uint32_t block_number, return_entry, next_entry, next_sector;
  26   1        uint16_t number_of_entries;
  27   1        uint8_t xdata block_info[512];
  28   1      
  29   1        LED3=0;
  30   1        UART_Init();
  31   1        LCD_Init();
  32   1        SPI_master_init(400000); // Set clock rate to that speed in Hz
  33   1        error_flag = SDcard_init();
  34   1        printf("%-20s", "  Mounting Drive ");
  35   1        error_flag = mount_drive();
  36   1        number_of_entries = Print_Directory(RootDirSec, block_info);
  37   1        
  38   1        while(1)
  39   1        {
  40   2          if(error_flag!= NO_ERRORS)
  41   2          {
  42   3          printf("%2.2bX", error_flag);
  43   3            putchar(10);
  44   3            putchar(13);
  45   3          }
  46   2          while(error_flag == NO_ERRORS)
  47   2          {
  48   3            do
  49   3            {
  50   4              printf("%-35s", "Enter a Block Number");
  51   4              block_number = long_serial_input();
  52   4            }while(block_number > number_of_entries);
  53   3            return_entry = Read_Dir_Entry(block_number, 512, block_info);
  54   3            next_entry = return_entry | 0x0FFFFFFF;
  55   3            if(return_entry | 0x10000000)
C51 COMPILER V9.53.0.0   MAIN                                                              11/06/2015 13:39:06 PAGE 2   

  56   3            {     
  57   4              while(!(!(return_entry | 0x10000000) || (return_entry | 0x80000000) || block_number == 0));
  58   4              {
  59   5                
  60   5                next_sector = first_sector(next_entry);
  61   5                number_of_entries = Print_Directory(next_sector, block_info);
  62   5                do
  63   5                {
  64   6                  printf("%-35s", "Enter a Block Number");
  65   6                  block_number = long_serial_input();
  66   6                }while(block_number > number_of_entries);
  67   5                return_entry = Read_Dir_Entry(block_number, 512, block_info);
  68   5                next_entry = return_entry | 0x0FFFFFFF;
  69   5              }
  70   4            }
  71   3            if((return_entry |0x10000000) == 0 && block_number !=0)
  72   3            {
  73   4              Open_File(next_entry, block_info);
  74   4              next_entry = return_entry | 0x0FFFFFFF;
  75   4            }
  76   3            if(return_entry | 0x80000000)
  77   3            {
  78   4              error_flag = PRINT_ERROR;
  79   4            }
  80   3          }
  81   2        }
  82   1      }
  83          
  84              
  85              
  86              
  87              
  88              
  89              
  90              
  91              
  92              
  93              
  94              
  95          //    if(error_flag != NO_ERRORS)
  96          //    {
  97          //      LED4 = 0;
  98          //      LCD_Clear();
  99          //      LCD_Write(COMMAND, LINE1);
 100          //      LCD_Print(1, &error_flag);
 101          //      
 102          //      delay_ms(1000); 
 103          //        printf("%2.2bX ",error_flag);       
 104          //      putchar(10);
 105          //      putchar(13);
 106          //      delay_ms(1000);
 107          //    }
 108          //    else
 109          //    {
 110          //      delay_ms(1000);
 111          //      LCD_Clear();
 112          //      LCD_Write(COMMAND, LINE1);
 113          //      LCD_Print(13, "Enter a Block");
 114          //      LCD_Write(COMMAND, LINE2);
 115          //      LCD_Print(8, "Number: ");
 116          //      //delay_ms(3000);
 117          //      
C51 COMPILER V9.53.0.0   MAIN                                                              11/06/2015 13:39:06 PAGE 3   

 118          //      printf("%-35s", "Enter a Block Number");
 119          //      
 120          //      block_number = long_serial_input();   // returns uint32_t 
 121          //      LCD_Clear();
 122          //      
 123          //      error_flag = read_block(block_number, block_info);
 124          //      LCD_Print(13, "Read Success!");
 125          //      print_memory(block_info,512);
 126          //      
 127          //    }
 128          
 129          //    
 130          //    
 131          //    
 132          //    
 133          ////    LCD_Write(COMMAND, LINE1);
 134          ////    LCD_Print(16, "Coltons and Matt");
 135          ////    LCD_Write(COMMAND, LINE2);
 136          ////    LCD_Print(15, "hews LCD Works!");
 137          ////    delay_ms(3000);
 138          ////    LCD_Clear();
 139          //  }
 140          
 141          //}
 142          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    466    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =   ----     512
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
