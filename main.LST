C51 COMPILER V9.53.0.0   MAIN                                                              11/06/2015 12:22:32 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "main.h"
   2          #include "port.h"
   3          #include <stdio.h>
   4          #include "uart.h"
   5          #include "print_bytes.h"
   6          #include "hardware_delay.h"
   7          #include "lcd.h"
   8          #include "spi.h"
   9          #include "SDcard.h"
  10          #include "Long_Serial_In.h"
  11          #include "read_sector.h"
  12          #include "Directory_Functions.h"
  13          
  14          
  15          
  16            
  17          
  18          
  19          extern uint32_t idata RootDirSec;
  20          
  21          
  22          void main(void)
  23          {
  24   1        uint8_t error_flag;
  25   1        uint32_t block_number, return_entry, next_entry, next_sector;
  26   1        uint16_t number_of_entries;
  27   1        uint8_t xdata block_info[512];
  28   1      
  29   1        LED3=0;
  30   1        UART_Init();
  31   1        LCD_Init();
  32   1        SPI_master_init(400000); // Set clock rate to that speed in Hz
  33   1        error_flag = SDcard_init();
  34   1        error_flag = mount_drive();
  35   1        number_of_entries = Print_Directory(RootDirSec, block_info);
  36   1        
  37   1        while(1)
  38   1        {
  39   2          while(error_flag == NO_ERRORS)
  40   2          {
  41   3            do
  42   3            {
  43   4              printf("%-35s", "Enter a Block Number");
  44   4              block_number = long_serial_input();
  45   4            }while(block_number > number_of_entries);
  46   3            return_entry = Read_Dir_Entry(block_number, 512, block_info);
  47   3            next_entry = return_entry | 0x0FFFFFFF;
  48   3            if(return_entry | 0x10000000)
  49   3            {     
  50   4              while(!(!(return_entry | 0x10000000) || (return_entry | 0x80000000) || block_number == 0));
  51   4              {
  52   5                
  53   5                next_sector = first_sector(next_entry);
  54   5                number_of_entries = Print_Directory(next_sector, block_info);
  55   5                do
C51 COMPILER V9.53.0.0   MAIN                                                              11/06/2015 12:22:32 PAGE 2   

  56   5                {
  57   6                  printf("%-35s", "Enter a Block Number");
  58   6                  block_number = long_serial_input();
  59   6                }while(block_number > number_of_entries);
  60   5                return_entry = Read_Dir_Entry(block_number, 512, block_info);
  61   5                next_entry = return_entry | 0x0FFFFFFF;
  62   5              }
  63   4            }
  64   3            if((return_entry |0x10000000) == 0 && block_number !=0)
  65   3            {
  66   4              Open_File(next_entry, block_info);
  67   4              next_entry = return_entry | 0x0FFFFFFF;
  68   4            }
  69   3            if(return_entry | 0x80000000)
  70   3            {
  71   4              error_flag = PRINT_ERROR;
  72   4            }
  73   3          }
  74   2        }
  75   1      }
  76          
  77              
  78              
  79              
  80              
  81              
  82              
  83              
  84              
  85              
  86              
  87              
  88          //    if(error_flag != NO_ERRORS)
  89          //    {
  90          //      LED4 = 0;
  91          //      LCD_Clear();
  92          //      LCD_Write(COMMAND, LINE1);
  93          //      LCD_Print(1, &error_flag);
  94          //      
  95          //      delay_ms(1000); 
  96          //        printf("%2.2bX ",error_flag);       
  97          //      putchar(10);
  98          //      putchar(13);
  99          //      delay_ms(1000);
 100          //    }
 101          //    else
 102          //    {
 103          //      delay_ms(1000);
 104          //      LCD_Clear();
 105          //      LCD_Write(COMMAND, LINE1);
 106          //      LCD_Print(13, "Enter a Block");
 107          //      LCD_Write(COMMAND, LINE2);
 108          //      LCD_Print(8, "Number: ");
 109          //      //delay_ms(3000);
 110          //      
 111          //      printf("%-35s", "Enter a Block Number");
 112          //      
 113          //      block_number = long_serial_input();   // returns uint32_t 
 114          //      LCD_Clear();
 115          //      
 116          //      error_flag = read_block(block_number, block_info);
 117          //      LCD_Print(13, "Read Success!");
C51 COMPILER V9.53.0.0   MAIN                                                              11/06/2015 12:22:32 PAGE 3   

 118          //      print_memory(block_info,512);
 119          //      
 120          //    }
 121          
 122          //    
 123          //    
 124          //    
 125          //    
 126          ////    LCD_Write(COMMAND, LINE1);
 127          ////    LCD_Print(16, "Coltons and Matt");
 128          ////    LCD_Write(COMMAND, LINE2);
 129          ////    LCD_Print(15, "hews LCD Works!");
 130          ////    delay_ms(3000);
 131          ////    LCD_Clear();
 132          //  }
 133          
 134          //}
 135          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    423    ----
   CONSTANT SIZE    =     27    ----
   XDATA SIZE       =   ----     512
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
